<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20251.25.0313.2002                               -->
<workbook original-version='18.1' source-build='2025.1.0 (20251.25.0313.2002)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='final_co2_emissions (final_co2_emissions)' inline='true' name='federated.0wsk6sm187yphx179hh361l7xsp1' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='final_co2_emissions' name='excel-direct.1eure5n10qywo918q503d1w46m5x'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/sayal/Desktop/SIG/Internship/Project 1 (Global CO2 Emissions Tracker by Sector)/final_co2_emissions.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.1eure5n10qywo918q503d1w46m5x' name='final_co2_emissions' table='[final_co2_emissions$]' type='table'>
          <columns gridOrigin='A1:K6561:no:A1:K6561:0' header='yes' outcome='6'>
            <column datatype='string' name='country' ordinal='0' />
            <column datatype='integer' name='year' ordinal='1' />
            <column datatype='real' name='buildings' ordinal='2' />
            <column datatype='real' name='industry' ordinal='3' />
            <column datatype='real' name='land_use' ordinal='4' />
            <column datatype='real' name='other_fuel' ordinal='5' />
            <column datatype='real' name='transport' ordinal='6' />
            <column datatype='real' name='manufacturing' ordinal='7' />
            <column datatype='real' name='electricity_heat' ordinal='8' />
            <column datatype='real' name='bunker_fuels' ordinal='9' />
            <column datatype='real' name='total_emissions' ordinal='10' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[final_co2_emissions]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>2</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:K6561:no:A1:K6561:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[final_co2_emissions]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[final!co2!emissions_F62C7E84FE3B48F69C7C4173DA2E0A1F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[final_co2_emissions]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[final!co2!emissions_F62C7E84FE3B48F69C7C4173DA2E0A1F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>buildings</remote-name>
            <remote-type>5</remote-type>
            <local-name>[buildings]</local-name>
            <parent-name>[final_co2_emissions]</parent-name>
            <remote-alias>buildings</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[final!co2!emissions_F62C7E84FE3B48F69C7C4173DA2E0A1F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>industry</remote-name>
            <remote-type>5</remote-type>
            <local-name>[industry]</local-name>
            <parent-name>[final_co2_emissions]</parent-name>
            <remote-alias>industry</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[final!co2!emissions_F62C7E84FE3B48F69C7C4173DA2E0A1F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>land_use</remote-name>
            <remote-type>5</remote-type>
            <local-name>[land_use]</local-name>
            <parent-name>[final_co2_emissions]</parent-name>
            <remote-alias>land_use</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[final!co2!emissions_F62C7E84FE3B48F69C7C4173DA2E0A1F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>other_fuel</remote-name>
            <remote-type>5</remote-type>
            <local-name>[other_fuel]</local-name>
            <parent-name>[final_co2_emissions]</parent-name>
            <remote-alias>other_fuel</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[final!co2!emissions_F62C7E84FE3B48F69C7C4173DA2E0A1F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>transport</remote-name>
            <remote-type>5</remote-type>
            <local-name>[transport]</local-name>
            <parent-name>[final_co2_emissions]</parent-name>
            <remote-alias>transport</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[final!co2!emissions_F62C7E84FE3B48F69C7C4173DA2E0A1F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>manufacturing</remote-name>
            <remote-type>5</remote-type>
            <local-name>[manufacturing]</local-name>
            <parent-name>[final_co2_emissions]</parent-name>
            <remote-alias>manufacturing</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[final!co2!emissions_F62C7E84FE3B48F69C7C4173DA2E0A1F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>electricity_heat</remote-name>
            <remote-type>5</remote-type>
            <local-name>[electricity_heat]</local-name>
            <parent-name>[final_co2_emissions]</parent-name>
            <remote-alias>electricity_heat</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[final!co2!emissions_F62C7E84FE3B48F69C7C4173DA2E0A1F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bunker_fuels</remote-name>
            <remote-type>5</remote-type>
            <local-name>[bunker_fuels]</local-name>
            <parent-name>[final_co2_emissions]</parent-name>
            <remote-alias>bunker_fuels</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[final!co2!emissions_F62C7E84FE3B48F69C7C4173DA2E0A1F]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_emissions</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_emissions]</local-name>
            <parent-name>[final_co2_emissions]</parent-name>
            <remote-alias>total_emissions</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[final!co2!emissions_F62C7E84FE3B48F69C7C4173DA2E0A1F]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Rank' datatype='integer' name='[Calculation_762515719149985792]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RANK(SUM([total_emissions]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Rank by Year' datatype='integer' name='[Calculation_762515719150821377]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RANK_UNIQUE(SUM([total_emissions]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='final_co2_emissions' datatype='table' name='[__tableau_internal_object_id__].[final!co2!emissions_F62C7E84FE3B48F69C7C4173DA2E0A1F]' role='measure' type='quantitative' />
      <column caption='Buildings' datatype='real' name='[buildings]' role='measure' type='quantitative' />
      <column caption='Bunker Fuels' datatype='real' name='[bunker_fuels]' role='measure' type='quantitative' />
      <column caption='Code' datatype='string' name='[code]' role='dimension' type='nominal' />
      <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Electricity Heat' datatype='real' name='[electricity_heat]' role='measure' type='quantitative' />
      <column caption='Industry' datatype='real' name='[industry]' role='measure' type='quantitative' />
      <column caption='Land Use' datatype='real' name='[land_use]' role='measure' type='quantitative' />
      <column caption='Manufacturing' datatype='real' name='[manufacturing]' role='measure' type='quantitative' />
      <column caption='Other Fuel' datatype='real' name='[other_fuel]' role='measure' type='quantitative' />
      <column caption='Total Emissions' datatype='real' name='[total_emissions]' role='measure' type='quantitative' />
      <column caption='Transport' datatype='real' name='[transport]' role='measure' type='quantitative' />
      <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      <column-instance column='[__tableau_internal_object_id__].[final!co2!emissions_F62C7E84FE3B48F69C7C4173DA2E0A1F]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:final!co2!emissions_F62C7E84FE3B48F69C7C4173DA2E0A1F:qk]' pivot='key' type='quantitative' />
      <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
      <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
      <column-instance column='[buildings]' derivation='Sum' name='[sum:buildings:qk]' pivot='key' type='quantitative' />
      <column-instance column='[bunker_fuels]' derivation='Sum' name='[sum:bunker_fuels:qk]' pivot='key' type='quantitative' />
      <column-instance column='[electricity_heat]' derivation='Sum' name='[sum:electricity_heat:qk]' pivot='key' type='quantitative' />
      <column-instance column='[industry]' derivation='Sum' name='[sum:industry:qk]' pivot='key' type='quantitative' />
      <column-instance column='[land_use]' derivation='Sum' name='[sum:land_use:qk]' pivot='key' type='quantitative' />
      <column-instance column='[manufacturing]' derivation='Sum' name='[sum:manufacturing:qk]' pivot='key' type='quantitative' />
      <column-instance column='[other_fuel]' derivation='Sum' name='[sum:other_fuel:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_emissions]' derivation='Sum' name='[sum:total_emissions:qk]' pivot='key' type='quantitative' />
      <column-instance column='[transport]' derivation='Sum' name='[sum:transport:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_762515719149985792]' derivation='User' name='[usr:Calculation_762515719149985792:qk:1]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.0wsk6sm187yphx179hh361l7xsp1].[none:year:qk]' ordering-type='Field' />
      </column-instance>
      <column-instance column='[Calculation_762515719149985792]' derivation='User' name='[usr:Calculation_762515719149985792:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
      </column-instance>
      <column-instance column='[Calculation_762515719150821377]' derivation='User' name='[usr:Calculation_762515719150821377:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
      </column-instance>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:country:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;North Korea&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Low-income countries&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;East Timor&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Niue&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;High-income countries&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lower-middle-income countries&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Upper-middle-income countries&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;European Union (27)&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;[federated.0wsk6sm187yphx179hh361l7xsp1].[usr:Calculation_762515719149985792:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0wsk6sm187yphx179hh361l7xsp1].[sum:electricity_heat:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0wsk6sm187yphx179hh361l7xsp1].[usr:Calculation_762515719149985792:qk:1]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0wsk6sm187yphx179hh361l7xsp1].[sum:bunker_fuels:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0wsk6sm187yphx179hh361l7xsp1].[sum:buildings:qk]&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;[federated.0wsk6sm187yphx179hh361l7xsp1].[sum:other_fuel:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.0wsk6sm187yphx179hh361l7xsp1].[sum:land_use:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.0wsk6sm187yphx179hh361l7xsp1].[sum:total_emissions:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0wsk6sm187yphx179hh361l7xsp1].[sum:transport:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0wsk6sm187yphx179hh361l7xsp1].[__tableau_internal_object_id__].[cnt:final!co2!emissions_F62C7E84FE3B48F69C7C4173DA2E0A1F:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0wsk6sm187yphx179hh361l7xsp1].[sum:industry:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0wsk6sm187yphx179hh361l7xsp1].[usr:Calculation_762515719150821377:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.0wsk6sm187yphx179hh361l7xsp1].[sum:manufacturing:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <object-graph>
        <objects>
          <object caption='final_co2_emissions' id='final!co2!emissions_F62C7E84FE3B48F69C7C4173DA2E0A1F'>
            <properties context=''>
              <relation connection='excel-direct.1eure5n10qywo918q503d1w46m5x' name='final_co2_emissions' table='[final_co2_emissions$]' type='table'>
                <columns gridOrigin='A1:K6561:no:A1:K6561:0' header='yes' outcome='6'>
                  <column datatype='string' name='country' ordinal='0' />
                  <column datatype='integer' name='year' ordinal='1' />
                  <column datatype='real' name='buildings' ordinal='2' />
                  <column datatype='real' name='industry' ordinal='3' />
                  <column datatype='real' name='land_use' ordinal='4' />
                  <column datatype='real' name='other_fuel' ordinal='5' />
                  <column datatype='real' name='transport' ordinal='6' />
                  <column datatype='real' name='manufacturing' ordinal='7' />
                  <column datatype='real' name='electricity_heat' ordinal='8' />
                  <column datatype='real' name='bunker_fuels' ordinal='9' />
                  <column datatype='real' name='total_emissions' ordinal='10' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Buildings'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontname='Benton Sans SemiDemi'>Buildings</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='final_co2_emissions (final_co2_emissions)' name='federated.0wsk6sm187yphx179hh361l7xsp1' />
          </datasources>
          <datasource-dependencies datasource='federated.0wsk6sm187yphx179hh361l7xsp1'>
            <column caption='Buildings' datatype='real' name='[buildings]' role='measure' type='quantitative' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[buildings]' derivation='Sum' name='[sum:buildings:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0wsk6sm187yphx179hh361l7xsp1].[none:year:qk]' included-values='in-range'>
            <min>2021</min>
            <max>2021</max>
          </filter>
          <slices>
            <column>[federated.0wsk6sm187yphx179hh361l7xsp1].[none:year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0wsk6sm187yphx179hh361l7xsp1].[sum:buildings:qk]' value='n#,##0,,,.00B;-#,##0,,,.00B' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0wsk6sm187yphx179hh361l7xsp1].[sum:buildings:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{36A3EFAE-B5A3-4471-835B-EC58CE4FD2A8}' />
    </worksheet>
    <worksheet name='Country Rank Over Time'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#000000' fontname='Benton Sans Book'>Country Rank Over Time</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='final_co2_emissions (final_co2_emissions)' name='federated.0wsk6sm187yphx179hh361l7xsp1' />
          </datasources>
          <datasource-dependencies datasource='federated.0wsk6sm187yphx179hh361l7xsp1'>
            <column caption='Rank by Year' datatype='integer' name='[Calculation_762515719150821377]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RANK_UNIQUE(SUM([total_emissions]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Buildings' datatype='real' name='[buildings]' role='measure' type='quantitative' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column caption='Total Emissions' datatype='real' name='[total_emissions]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_762515719150821377]' derivation='User' name='[usr:Calculation_762515719150821377:qk:1]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.0wsk6sm187yphx179hh361l7xsp1].[none:year:qk]' ordering-type='Field' />
            </column-instance>
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0wsk6sm187yphx179hh361l7xsp1].[none:country:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([buildings])' function='order' user:ui-marker='order'>
                <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Afghanistan&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Armenia&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Bhutan&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;China&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;India&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Iran&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Iraq&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Maldives&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Mongolia&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Myanmar&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Namibia&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Nepal&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Pakistan&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Sri Lanka&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0wsk6sm187yphx179hh361l7xsp1].[usr:Calculation_762515719150821377:qk:1]' included-values='in-range'>
            <min>1</min>
            <max>32</max>
          </filter>
          <slices>
            <column>[federated.0wsk6sm187yphx179hh361l7xsp1].[none:country:nk]</column>
            <column>[federated.0wsk6sm187yphx179hh361l7xsp1].[usr:Calculation_762515719150821377:qk:1]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.0wsk6sm187yphx179hh361l7xsp1].[none:country:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0wsk6sm187yphx179hh361l7xsp1].[usr:Calculation_762515719150821377:qk:1]</rows>
        <cols>[federated.0wsk6sm187yphx179hh361l7xsp1].[none:year:qk]</cols>
      </table>
      <simple-id uuid='{9DD84FD2-C2D4-4BF7-B5F9-D1D1B6C46B37}' />
    </worksheet>
    <worksheet name='Electricity Heat'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontname='Benton Sans SemiDemi'>Electricity Heat</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='final_co2_emissions (final_co2_emissions)' name='federated.0wsk6sm187yphx179hh361l7xsp1' />
          </datasources>
          <datasource-dependencies datasource='federated.0wsk6sm187yphx179hh361l7xsp1'>
            <column caption='Electricity Heat' datatype='real' name='[electricity_heat]' role='measure' type='quantitative' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[electricity_heat]' derivation='Sum' name='[sum:electricity_heat:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0wsk6sm187yphx179hh361l7xsp1].[none:year:qk]' included-values='in-range'>
            <min>2021</min>
            <max>2021</max>
          </filter>
          <slices>
            <column>[federated.0wsk6sm187yphx179hh361l7xsp1].[none:year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0wsk6sm187yphx179hh361l7xsp1].[sum:electricity_heat:qk]' value='n#,##0,,,.00B;-#,##0,,,.00B' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0wsk6sm187yphx179hh361l7xsp1].[sum:electricity_heat:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{95CB622B-FF5C-40CA-8A8F-18239166C1D0}' />
    </worksheet>
    <worksheet name='Emissions'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#000000' fontname='Benton Sans Book'>Emissions</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='final_co2_emissions (final_co2_emissions)' name='federated.0wsk6sm187yphx179hh361l7xsp1' />
          </datasources>
          <datasource-dependencies datasource='federated.0wsk6sm187yphx179hh361l7xsp1'>
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_emissions]' derivation='Sum' name='[sum:total_emissions:qk]' pivot='key' type='quantitative' />
            <column caption='Total Emissions' datatype='real' name='[total_emissions]' role='measure' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0wsk6sm187yphx179hh361l7xsp1].[none:year:qk]' included-values='in-range'>
            <min>2021</min>
            <max>2021</max>
          </filter>
          <slices>
            <column>[federated.0wsk6sm187yphx179hh361l7xsp1].[none:year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0wsk6sm187yphx179hh361l7xsp1].[sum:total_emissions:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{BA01CB0B-AE1E-4AC5-8D12-0AEF61723168}' />
    </worksheet>
    <worksheet name='Emissions Over Time'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#000000' fontname='Benton Sans Book'>Emissions Over Time of Asian Countries</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='final_co2_emissions (final_co2_emissions)' name='federated.0wsk6sm187yphx179hh361l7xsp1' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0wsk6sm187yphx179hh361l7xsp1'>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_emissions]' derivation='Sum' name='[sum:total_emissions:qk]' pivot='key' type='quantitative' />
            <column caption='Total Emissions' datatype='real' name='[total_emissions]' role='measure' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0wsk6sm187yphx179hh361l7xsp1].[none:country:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([total_emissions])' function='order' user:ui-marker='order'>
                <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Afghanistan&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Armenia&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Bangladesh&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Bhutan&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Brunei&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Cambodia&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;China&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Cyprus&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;India&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Iran&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Iraq&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Maldives&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Mongolia&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Nepal&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0wsk6sm187yphx179hh361l7xsp1].[none:country:nk]' direction='ASC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0wsk6sm187yphx179hh361l7xsp1].[sum:total_emissions:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0wsk6sm187yphx179hh361l7xsp1].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0wsk6sm187yphx179hh361l7xsp1].[sum:total_emissions:qk]' palette='green_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.0wsk6sm187yphx179hh361l7xsp1].[none:country:nk]' value='false' />
            <format attr='break-on-special' field='[federated.0wsk6sm187yphx179hh361l7xsp1].[none:country:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0wsk6sm187yphx179hh361l7xsp1].[none:country:nk]' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.0wsk6sm187yphx179hh361l7xsp1].[sum:total_emissions:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0wsk6sm187yphx179hh361l7xsp1].[none:country:nk]</rows>
        <cols>[federated.0wsk6sm187yphx179hh361l7xsp1].[none:year:qk]</cols>
      </table>
      <simple-id uuid='{E6D8CDC9-7C60-4168-855C-35BBAFFE0879}' />
    </worksheet>
    <worksheet name='Emissions by Sector'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontname='Benton Sans Book'>Emissions by Sector</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='final_co2_emissions (final_co2_emissions)' name='federated.0wsk6sm187yphx179hh361l7xsp1' />
          </datasources>
          <datasource-dependencies datasource='federated.0wsk6sm187yphx179hh361l7xsp1'>
            <column caption='Rank' datatype='integer' name='[Calculation_762515719149985792]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RANK(SUM([total_emissions]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Rank by Year' datatype='integer' name='[Calculation_762515719150821377]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RANK_UNIQUE(SUM([total_emissions]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column-instance column='[__tableau_internal_object_id__].[final!co2!emissions_F62C7E84FE3B48F69C7C4173DA2E0A1F]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:final!co2!emissions_F62C7E84FE3B48F69C7C4173DA2E0A1F:qk]' pivot='key' type='quantitative' />
            <column caption='final_co2_emissions' datatype='table' name='[__tableau_internal_object_id__].[final!co2!emissions_F62C7E84FE3B48F69C7C4173DA2E0A1F]' role='measure' type='quantitative' />
            <column caption='Buildings' datatype='real' name='[buildings]' role='measure' type='quantitative' />
            <column caption='Bunker Fuels' datatype='real' name='[bunker_fuels]' role='measure' type='quantitative' />
            <column caption='Electricity Heat' datatype='real' name='[electricity_heat]' role='measure' type='quantitative' />
            <column caption='Industry' datatype='real' name='[industry]' role='measure' type='quantitative' />
            <column caption='Land Use' datatype='real' name='[land_use]' role='measure' type='quantitative' />
            <column caption='Manufacturing' datatype='real' name='[manufacturing]' role='measure' type='quantitative' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column caption='Other Fuel' datatype='real' name='[other_fuel]' role='measure' type='quantitative' />
            <column-instance column='[buildings]' derivation='Sum' name='[sum:buildings:qk]' pivot='key' type='quantitative' />
            <column-instance column='[bunker_fuels]' derivation='Sum' name='[sum:bunker_fuels:qk]' pivot='key' type='quantitative' />
            <column-instance column='[electricity_heat]' derivation='Sum' name='[sum:electricity_heat:qk]' pivot='key' type='quantitative' />
            <column-instance column='[industry]' derivation='Sum' name='[sum:industry:qk]' pivot='key' type='quantitative' />
            <column-instance column='[land_use]' derivation='Sum' name='[sum:land_use:qk]' pivot='key' type='quantitative' />
            <column-instance column='[manufacturing]' derivation='Sum' name='[sum:manufacturing:qk]' pivot='key' type='quantitative' />
            <column-instance column='[other_fuel]' derivation='Sum' name='[sum:other_fuel:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_emissions]' derivation='Sum' name='[sum:total_emissions:qk]' pivot='key' type='quantitative' />
            <column-instance column='[transport]' derivation='Sum' name='[sum:transport:qk]' pivot='key' type='quantitative' />
            <column caption='Total Emissions' datatype='real' name='[total_emissions]' role='measure' type='quantitative' />
            <column caption='Transport' datatype='real' name='[transport]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_762515719149985792]' derivation='User' name='[usr:Calculation_762515719149985792:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Calculation_762515719150821377]' derivation='User' name='[usr:Calculation_762515719150821377:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0wsk6sm187yphx179hh361l7xsp1].[:Measure Names]'>
            <groupfilter function='level-members' level='[:Measure Names]' />
          </filter>
          <filter class='quantitative' column='[federated.0wsk6sm187yphx179hh361l7xsp1].[sum:electricity_heat:qk]' included-values='in-range'>
            <min>35652818899.979996</min>
          </filter>
          <filter class='quantitative' column='[federated.0wsk6sm187yphx179hh361l7xsp1].[sum:industry:qk]' included-values='in-range'>
            <min>1850539999.96</min>
            <max>6838110000.0</max>
          </filter>
          <filter class='quantitative' column='[federated.0wsk6sm187yphx179hh361l7xsp1].[sum:transport:qk]' included-values='all' />
          <slices>
            <column>[federated.0wsk6sm187yphx179hh361l7xsp1].[sum:industry:qk]</column>
            <column>[federated.0wsk6sm187yphx179hh361l7xsp1].[:Measure Names]</column>
            <column>[federated.0wsk6sm187yphx179hh361l7xsp1].[sum:transport:qk]</column>
            <column>[federated.0wsk6sm187yphx179hh361l7xsp1].[sum:electricity_heat:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[federated.0wsk6sm187yphx179hh361l7xsp1].[Multiple Values]' value='68' />
          </style-rule>
        </style>
        <panes>
          <pane id='9' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.0wsk6sm187yphx179hh361l7xsp1].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='range' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0wsk6sm187yphx179hh361l7xsp1].[Multiple Values]</rows>
        <cols>[federated.0wsk6sm187yphx179hh361l7xsp1].[none:year:qk]</cols>
      </table>
      <simple-id uuid='{DE8A5302-F6EC-411A-96C6-FEAB961DEED2}' />
    </worksheet>
    <worksheet name='Industry'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontname='Benton Sans SemiDemi'>Industry</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='final_co2_emissions (final_co2_emissions)' name='federated.0wsk6sm187yphx179hh361l7xsp1' />
          </datasources>
          <datasource-dependencies datasource='federated.0wsk6sm187yphx179hh361l7xsp1'>
            <column caption='Industry' datatype='real' name='[industry]' role='measure' type='quantitative' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[industry]' derivation='Sum' name='[sum:industry:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0wsk6sm187yphx179hh361l7xsp1].[none:year:qk]' included-values='in-range'>
            <min>2021</min>
            <max>2021</max>
          </filter>
          <slices>
            <column>[federated.0wsk6sm187yphx179hh361l7xsp1].[none:year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0wsk6sm187yphx179hh361l7xsp1].[sum:industry:qk]' value='n#,##0,,,.00B;-#,##0,,,.00B' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0wsk6sm187yphx179hh361l7xsp1].[sum:industry:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{F37FA22A-1054-49B5-9726-9AD9AE522368}' />
    </worksheet>
    <worksheet name='Land Use'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontname='Benton Sans SemiDemi'>Land Use</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='final_co2_emissions (final_co2_emissions)' name='federated.0wsk6sm187yphx179hh361l7xsp1' />
          </datasources>
          <datasource-dependencies datasource='federated.0wsk6sm187yphx179hh361l7xsp1'>
            <column caption='Land Use' datatype='real' name='[land_use]' role='measure' type='quantitative' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[land_use]' derivation='Sum' name='[sum:land_use:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0wsk6sm187yphx179hh361l7xsp1].[none:year:qk]' included-values='in-range'>
            <min>2021</min>
            <max>2021</max>
          </filter>
          <slices>
            <column>[federated.0wsk6sm187yphx179hh361l7xsp1].[none:year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0wsk6sm187yphx179hh361l7xsp1].[sum:land_use:qk]' value='n#,##0,,,.00B;-#,##0,,,.00B' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0wsk6sm187yphx179hh361l7xsp1].[sum:land_use:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{F0C45CFA-59D9-40AD-AA23-CFAEEB1D773F}' />
    </worksheet>
    <worksheet name='Top 5 CO₂ Emitters in 2022'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#000000' fontname='Benton Sans Book'>Top 5 CO₂ Emitters in 2022</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='final_co2_emissions (final_co2_emissions)' name='federated.0wsk6sm187yphx179hh361l7xsp1' />
          </datasources>
          <datasource-dependencies datasource='federated.0wsk6sm187yphx179hh361l7xsp1'>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_emissions]' derivation='Sum' name='[sum:total_emissions:qk]' pivot='key' type='quantitative' />
            <column caption='Total Emissions' datatype='real' name='[total_emissions]' role='measure' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0wsk6sm187yphx179hh361l7xsp1].[none:year:qk]' included-values='in-range'>
            <min>2022</min>
            <max>2022</max>
          </filter>
          <slices>
            <column>[federated.0wsk6sm187yphx179hh361l7xsp1].[none:year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.0wsk6sm187yphx179hh361l7xsp1].[sum:total_emissions:qk]' />
              <text column='[federated.0wsk6sm187yphx179hh361l7xsp1].[none:country:nk]' />
              <color column='[federated.0wsk6sm187yphx179hh361l7xsp1].[none:country:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{B4A1E65B-EBF5-4C8C-84F1-0F8D17427B08}' />
    </worksheet>
    <worksheet name='Top Emitters Over Time'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#000000' fontname='Benton Sans Book'>Top Emitters Over Time</run>
            <run fontalignment='1'>Æ&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='final_co2_emissions (final_co2_emissions)' name='federated.0wsk6sm187yphx179hh361l7xsp1' />
          </datasources>
          <datasource-dependencies datasource='federated.0wsk6sm187yphx179hh361l7xsp1'>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_emissions]' derivation='Sum' name='[sum:total_emissions:qk]' pivot='key' type='quantitative' />
            <column caption='Total Emissions' datatype='real' name='[total_emissions]' role='measure' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0wsk6sm187yphx179hh361l7xsp1].[none:country:nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([total_emissions])' function='order' user:ui-marker='order'>
                <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Afghanistan&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Albania&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Algeria&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Andorra&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Angola&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Antigua and Barbuda&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Argentina&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Armenia&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Australia&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Austria&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Azerbaijan&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Bahamas&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Bahrain&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Bangladesh&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Barbados&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Belarus&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Belgium&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Belize&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Benin&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Bhutan&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Bolivia&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Bosnia and Herzegovina&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Botswana&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Brazil&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Brunei&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Bulgaria&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Burkina Faso&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Burundi&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Cambodia&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Cameroon&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Canada&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Cape Verde&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Central African Republic&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Chad&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Chile&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;China&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Colombia&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Comoros&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Congo&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Cook Islands&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Costa Rica&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Cote d&apos;Ivoire&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Croatia&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Cuba&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Cyprus&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Czechia&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Democratic Republic of Congo&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Denmark&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Djibouti&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Dominica&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Dominican Republic&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;East Timor&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Ecuador&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Egypt&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;El Salvador&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Equatorial Guinea&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Eritrea&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Estonia&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Eswatini&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Ethiopia&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Fiji&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Finland&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;France&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Gabon&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Gambia&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Georgia&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Germany&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Ghana&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Greece&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Grenada&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Guatemala&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Guinea&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Guinea-Bissau&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Guyana&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Haiti&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Honduras&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Hungary&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Iceland&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;India&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Indonesia&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Iran&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Iraq&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Ireland&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Israel&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Italy&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Jamaica&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Japan&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Jordan&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Kazakhstan&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Kenya&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Kiribati&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Kuwait&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Kyrgyzstan&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Laos&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Latvia&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Lebanon&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Lesotho&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Liberia&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Libya&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Liechtenstein&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Lithuania&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Luxembourg&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Madagascar&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Malawi&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Malaysia&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Maldives&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Mali&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Malta&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Marshall Islands&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Mauritania&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Mauritius&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Mexico&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Micronesia (country)&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Moldova&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Mongolia&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Montenegro&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Morocco&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Mozambique&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Myanmar&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Namibia&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Nauru&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Nepal&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Netherlands&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;New Zealand&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Nicaragua&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Niger&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Nigeria&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Niue&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;North Korea&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;North Macedonia&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Norway&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Oceania&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Oman&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Pakistan&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Palau&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Panama&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Papua New Guinea&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Paraguay&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Peru&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Philippines&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Poland&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Portugal&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Qatar&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Romania&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Russia&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Rwanda&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Saint Kitts and Nevis&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Saint Lucia&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Saint Vincent and the Grenadines&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Samoa&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Sao Tome and Principe&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Saudi Arabia&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Senegal&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Serbia&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Seychelles&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Sierra Leone&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Singapore&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Slovakia&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Slovenia&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Solomon Islands&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Somalia&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;South Africa&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;South Korea&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;South Sudan&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Spain&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Sri Lanka&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Sudan&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Suriname&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Sweden&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Switzerland&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Syria&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Tajikistan&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Tanzania&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Thailand&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Togo&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Tonga&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Trinidad and Tobago&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Tunisia&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Turkey&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Turkmenistan&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Tuvalu&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Uganda&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Ukraine&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United Arab Emirates&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United Kingdom&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;United States&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Uruguay&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Uzbekistan&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Vanuatu&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Venezuela&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Vietnam&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Yemen&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Zambia&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Zimbabwe&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0wsk6sm187yphx179hh361l7xsp1].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[federated.0wsk6sm187yphx179hh361l7xsp1].[sum:total_emissions:qk]' value='10' />
            <format attr='height' field='[federated.0wsk6sm187yphx179hh361l7xsp1].[none:year:qk]' value='33' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0wsk6sm187yphx179hh361l7xsp1].[sum:total_emissions:qk]' palette='green_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0wsk6sm187yphx179hh361l7xsp1].[sum:total_emissions:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='line-ends' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0wsk6sm187yphx179hh361l7xsp1].[none:country:nk] * [federated.0wsk6sm187yphx179hh361l7xsp1].[sum:total_emissions:qk])</rows>
        <cols>[federated.0wsk6sm187yphx179hh361l7xsp1].[none:year:qk]</cols>
      </table>
      <simple-id uuid='{4EDF37EF-369E-48A1-9B0E-4BBDF2E7688C}' />
    </worksheet>
    <worksheet name='Total Emissions by Country'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#000000' fontname='Benton Sans Book'>Total Emissions by Country</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='final_co2_emissions (final_co2_emissions)' name='federated.0wsk6sm187yphx179hh361l7xsp1' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0wsk6sm187yphx179hh361l7xsp1'>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_emissions]' derivation='Sum' name='[sum:total_emissions:qk]' pivot='key' type='quantitative' />
            <column caption='Total Emissions' datatype='real' name='[total_emissions]' role='measure' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0wsk6sm187yphx179hh361l7xsp1].[Longitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.0wsk6sm187yphx179hh361l7xsp1].[none:year:qk]' included-values='in-range'>
            <min>1990</min>
            <max>2021</max>
          </filter>
          <slices>
            <column>[federated.0wsk6sm187yphx179hh361l7xsp1].[Longitude (generated)]</column>
            <column>[federated.0wsk6sm187yphx179hh361l7xsp1].[none:year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0wsk6sm187yphx179hh361l7xsp1].[Longitude (generated)]' field-type='quantitative' max='28706137.119729035' min='-15821661.320831189' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0wsk6sm187yphx179hh361l7xsp1].[Latitude (generated)]' field-type='quantitative' max='15003556.227625577' min='-10859462.917049412' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0wsk6sm187yphx179hh361l7xsp1].[sum:total_emissions:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#00aa00</color>
                <color>#0fae0f</color>
                <color>#20b220</color>
                <color>#31b631</color>
                <color>#44bb44</color>
                <color>#56bf56</color>
                <color>#6ac36a</color>
                <color>#7fc77f</color>
                <color>#94cc94</color>
                <color>#aad0aa</color>
                <color>#c1d4c1</color>
                <color>#d9d9d9</color>
                <color>#d6c3c4</color>
                <color>#d3aeb1</color>
                <color>#d09a9e</color>
                <color>#cd868b</color>
                <color>#ca7379</color>
                <color>#c76067</color>
                <color>#c44e56</color>
                <color>#c13c45</color>
                <color>#be2a35</color>
                <color>#bb1a25</color>
                <color>#b80a16</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.0wsk6sm187yphx179hh361l7xsp1].[none:country:nk]' value='false' />
            <format attr='break-on-special' field='[federated.0wsk6sm187yphx179hh361l7xsp1].[none:country:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0wsk6sm187yphx179hh361l7xsp1].[none:country:nk]' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0wsk6sm187yphx179hh361l7xsp1].[sum:total_emissions:qk]' />
              <lod column='[federated.0wsk6sm187yphx179hh361l7xsp1].[none:country:nk]' />
              <geometry column='[federated.0wsk6sm187yphx179hh361l7xsp1].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-mode' value='selection' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0wsk6sm187yphx179hh361l7xsp1].[Latitude (generated)]</rows>
        <cols>[federated.0wsk6sm187yphx179hh361l7xsp1].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{30857951-0D18-4C3C-91DF-E5CF3189403A}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='3' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='background-color' value='#f7faf0' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone forceUpdate='true' h='8250' id='5' type-v2='text' w='81800' x='9000' y='1750'>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#000000' fontname='Benton Sans Book' fontsize='20'>Global CO2 Emissions Tracker by Sector</run>
          </formatted-text>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='background-color' value='#7bed6a' />
          </zone-style>
        </zone>
        <zone h='33250' id='6' name='Total Emissions by Country' w='32000' x='1300' y='28500'>
          <zone-style>
            <format attr='border-color' value='#8cd17d' />
            <format attr='border-style' value='dotted' />
            <format attr='border-width' value='1' />
            <format attr='padding' value='10' />
            <format attr='background-color' value='#7bed6a' />
          </zone-style>
        </zone>
        <zone h='33250' id='7' name='Emissions by Sector' w='32300' x='65900' y='28500'>
          <zone-style>
            <format attr='border-color' value='#8cd17d' />
            <format attr='border-style' value='dotted' />
            <format attr='border-width' value='1' />
            <format attr='padding' value='10' />
            <format attr='background-color' value='#7bed6a' />
          </zone-style>
        </zone>
        <zone h='35250' id='8' name='Emissions Over Time' w='96600' x='1300' y='62750'>
          <zone-style>
            <format attr='border-color' value='#8cd17d' />
            <format attr='border-style' value='dotted' />
            <format attr='border-width' value='1' />
            <format attr='padding' value='10' />
            <format attr='background-color' value='#7bed6a' />
          </zone-style>
        </zone>
        <zone h='33500' id='9' name='Top Emitters Over Time' w='31200' x='33800' y='28250'>
          <zone-style>
            <format attr='border-color' value='#8cd17d' />
            <format attr='border-style' value='dotted' />
            <format attr='border-width' value='1' />
            <format attr='padding' value='10' />
            <format attr='background-color' value='#7bed6a' />
          </zone-style>
        </zone>
        <zone h='16500' id='10' name='Buildings' w='23400' x='1200' y='11000'>
          <zone-style>
            <format attr='border-color' value='#8cd17d' />
            <format attr='border-style' value='dotted' />
            <format attr='border-width' value='1' />
            <format attr='padding' value='10' />
            <format attr='background-color' value='#7bed6a' />
          </zone-style>
        </zone>
        <zone h='16500' id='11' name='Industry' w='23800' x='25300' y='10875'>
          <zone-style>
            <format attr='border-color' value='#8cd17d' />
            <format attr='border-style' value='dotted' />
            <format attr='border-width' value='1' />
            <format attr='padding' value='10' />
            <format attr='background-color' value='#7bed6a' />
          </zone-style>
        </zone>
        <zone h='16500' id='12' name='Land Use' w='23900' x='49800' y='11125'>
          <zone-style>
            <format attr='border-color' value='#8cd17d' />
            <format attr='border-style' value='dotted' />
            <format attr='border-width' value='1' />
            <format attr='padding' value='10' />
            <format attr='background-color' value='#7bed6a' />
          </zone-style>
        </zone>
        <zone h='16875' id='13' name='Electricity Heat' w='23800' x='74400' y='10875'>
          <zone-style>
            <format attr='border-color' value='#8cd17d' />
            <format attr='border-style' value='dotted' />
            <format attr='border-width' value='1' />
            <format attr='padding' value='10' />
            <format attr='background-color' value='#7bed6a' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1600' minheight='1600' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='15' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='14' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone forceUpdate='true' h='8250' id='5' type-v2='text' w='81800' x='9000' y='1750'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontcolor='#000000' fontname='Benton Sans Book' fontsize='20'>Global CO2 Emissions Tracker by Sector</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#7bed6a' />
                  </zone-style>
                </zone>
                <zone fixed-size='110' h='16500' id='11' is-fixed='true' name='Industry' w='23800' x='25300' y='10875'>
                  <zone-style>
                    <format attr='border-color' value='#8cd17d' />
                    <format attr='border-style' value='dotted' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#7bed6a' />
                  </zone-style>
                </zone>
                <zone fixed-size='113' h='16875' id='13' is-fixed='true' name='Electricity Heat' w='23800' x='74400' y='10875'>
                  <zone-style>
                    <format attr='border-color' value='#8cd17d' />
                    <format attr='border-style' value='dotted' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#7bed6a' />
                  </zone-style>
                </zone>
                <zone fixed-size='110' h='16500' id='10' is-fixed='true' name='Buildings' w='23400' x='1200' y='11000'>
                  <zone-style>
                    <format attr='border-color' value='#8cd17d' />
                    <format attr='border-style' value='dotted' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#7bed6a' />
                  </zone-style>
                </zone>
                <zone fixed-size='110' h='16500' id='12' is-fixed='true' name='Land Use' w='23900' x='49800' y='11125'>
                  <zone-style>
                    <format attr='border-color' value='#8cd17d' />
                    <format attr='border-style' value='dotted' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#7bed6a' />
                  </zone-style>
                </zone>
                <zone fixed-size='246' h='33500' id='9' is-fixed='true' name='Top Emitters Over Time' w='31200' x='33800' y='28250'>
                  <zone-style>
                    <format attr='border-color' value='#8cd17d' />
                    <format attr='border-style' value='dotted' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#7bed6a' />
                  </zone-style>
                </zone>
                <zone fixed-size='244' h='33250' id='6' is-fixed='true' name='Total Emissions by Country' w='32000' x='1300' y='28500'>
                  <zone-style>
                    <format attr='border-color' value='#8cd17d' />
                    <format attr='border-style' value='dotted' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#7bed6a' />
                  </zone-style>
                </zone>
                <zone fixed-size='244' h='33250' id='7' is-fixed='true' name='Emissions by Sector' w='32300' x='65900' y='28500'>
                  <zone-style>
                    <format attr='border-color' value='#8cd17d' />
                    <format attr='border-style' value='dotted' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#7bed6a' />
                  </zone-style>
                </zone>
                <zone fixed-size='260' h='35250' id='8' is-fixed='true' name='Emissions Over Time' w='96600' x='1300' y='62750'>
                  <zone-style>
                    <format attr='border-color' value='#8cd17d' />
                    <format attr='border-style' value='dotted' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#7bed6a' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{938A4132-BA2B-46DB-A2B9-06B54FC112B4}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Total Emissions by Country'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0wsk6sm187yphx179hh361l7xsp1].[none:year:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.0wsk6sm187yphx179hh361l7xsp1].[sum:total_emissions:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0wsk6sm187yphx179hh361l7xsp1].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6CACF7A4-B407-4B66-9B4B-58BABE187D28}' />
    </window>
    <window class='worksheet' name='Emissions by Sector'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0wsk6sm187yphx179hh361l7xsp1].[sum:electricity_heat:qk]' show-domain='false' show-null-ctrls='false' type='filter' values='relevant' />
            <card param='[federated.0wsk6sm187yphx179hh361l7xsp1].[sum:transport:qk]' show-domain='false' show-null-ctrls='false' type='filter' values='relevant' />
            <card param='[federated.0wsk6sm187yphx179hh361l7xsp1].[sum:industry:qk]' show-domain='false' show-null-ctrls='false' type='filter' values='relevant' />
            <card pane-specification-id='9' param='[federated.0wsk6sm187yphx179hh361l7xsp1].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0wsk6sm187yphx179hh361l7xsp1].[:Measure Names]</field>
            <field>[federated.0wsk6sm187yphx179hh361l7xsp1].[none:electricity_heat:qk]</field>
            <field>[federated.0wsk6sm187yphx179hh361l7xsp1].[none:industry:qk]</field>
            <field>[federated.0wsk6sm187yphx179hh361l7xsp1].[none:transport:qk]</field>
            <field>[federated.0wsk6sm187yphx179hh361l7xsp1].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C9F98E44-BFC8-4489-9AB4-6610ADF3968F}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Buildings'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Electricity Heat'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Emissions Over Time'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Emissions by Sector'>
          <zoom type='entire-view' />
          <highlight field='[federated.0wsk6sm187yphx179hh361l7xsp1].[:Measure Names]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Industry'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Land Use'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Top Emitters Over Time'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Total Emissions by Country'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{41EE4FBA-0C47-4215-A491-BB22BB707305}' />
    </window>
    <window class='worksheet' name='Emissions Over Time'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0wsk6sm187yphx179hh361l7xsp1].[none:country:nk]' type='filter' />
            <card pane-specification-id='2' param='[federated.0wsk6sm187yphx179hh361l7xsp1].[sum:total_emissions:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0wsk6sm187yphx179hh361l7xsp1].[__tableau_internal_object_id__].[cnt:final!co2!emissions_F62C7E84FE3B48F69C7C4173DA2E0A1F:qk]</field>
            <field>[federated.0wsk6sm187yphx179hh361l7xsp1].[none:country:nk]</field>
            <field>[federated.0wsk6sm187yphx179hh361l7xsp1].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FE0A1E0B-044C-4874-9522-820BEEFEF230}' />
    </window>
    <window class='worksheet' name='Country Rank Over Time'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0wsk6sm187yphx179hh361l7xsp1].[none:country:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.0wsk6sm187yphx179hh361l7xsp1].[none:country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0wsk6sm187yphx179hh361l7xsp1].[:Measure Names]</field>
            <field>[federated.0wsk6sm187yphx179hh361l7xsp1].[none:country:nk]</field>
            <field>[federated.0wsk6sm187yphx179hh361l7xsp1].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B81DD390-96C2-4FC1-B639-8DBEBD6398C8}' />
    </window>
    <window class='worksheet' name='Top Emitters Over Time'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0wsk6sm187yphx179hh361l7xsp1].[sum:total_emissions:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0wsk6sm187yphx179hh361l7xsp1].[none:country:nk]</field>
            <field>[federated.0wsk6sm187yphx179hh361l7xsp1].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5109B612-CA26-4C1A-BA39-5686D9497AC7}' />
    </window>
    <window class='worksheet' name='Top 5 CO₂ Emitters in 2022'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0wsk6sm187yphx179hh361l7xsp1].[none:country:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.0wsk6sm187yphx179hh361l7xsp1].[sum:total_emissions:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0wsk6sm187yphx179hh361l7xsp1].[none:country:nk]</field>
            <field>[federated.0wsk6sm187yphx179hh361l7xsp1].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3D70CD33-D1EF-4139-8092-963F9449B240}' />
    </window>
    <window class='worksheet' name='Emissions'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0wsk6sm187yphx179hh361l7xsp1].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{530DA93E-3950-4DF0-B215-D1BECF8ECDE5}' />
    </window>
    <window class='worksheet' name='Buildings'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0wsk6sm187yphx179hh361l7xsp1].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{08A2F5B1-49BA-4AE5-AA90-BC85983F1FE0}' />
    </window>
    <window class='worksheet' name='Industry'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0wsk6sm187yphx179hh361l7xsp1].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BF777FB8-3F76-456D-86F5-568854473C68}' />
    </window>
    <window class='worksheet' name='Land Use'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0wsk6sm187yphx179hh361l7xsp1].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0D9FC315-91A2-43A4-9F51-D9C8E02C8652}' />
    </window>
    <window class='worksheet' name='Electricity Heat'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0wsk6sm187yphx179hh361l7xsp1].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{40216B94-D06E-474C-A37F-76B09037F072}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='25' name='Buildings' width='64'>
      iVBORw0KGgoAAAANSUhEUgAAAEAAAAAZCAYAAACB6CjhAAAACXBIWXMAABJ0AAASdAHeZh94
      AAACUElEQVRYhe2YQWjTUBzGv4kdCl0d7jA8rYhaBBFGchpu4A5lOJzCwEiHU1BwqAM71uHA
      VVZGd5BNQXYIHkzBHkVRepAiUsfwYEAPu4hhJoQZnIIa2cA08DzobNqknU2HL7j+IJf3fe/P
      /328lxfSQAgh2MJso90AbeoB0G6ANvUAaDdAm3oAtBugTT0A2g3Qph4A7QZos+UD2F5rAUPN
      YmYsgcWe+0ifbXPtsaKkBtB/561lJIThB2msT7XrpR4FqYF+FFl8TQi29+HSxDC69xSW7T4A
      Q0V2ZgzJhVZ0h5rdexxQljSIolhR53gRMaZSlV7MipPo+tOLDunpFC6fu4VdmRiY3yt3fQSU
      h3chsklkHt3G4OGAa4/DLLyXQhvqe4NVNtwYwL7jQ+Ca32BxuTDsege0cQmMb4LHjoIl/dCG
      OtdSdWHA/IyVTwHs9xeGvPcSXFYha/fAsizYzjBOj/J4qZk2fZBly3tKMdfwRZoHH03i3fkY
      TljDI5uALERIRJBr9pSSX/1AXglXSDgcJ7lv1XhkIkQYwjCW59gQmXumkh8l8z0dgPv6MhEi
      cZKzufIkFz9CEguFEc8dgVVdR/FmNvFR0xDw+8vodk8lduz0wbQU8FwAX59EcfIqDwMAjBWI
      qSgmnh/FmZ6WIn1e0st6HDF0SNlp3Myw6LBcnw2EuPkr7PChYaF3VsRk1994ALy4AXYEljvb
      gJqdw6nxNPK+JgTbOYxMXUDH7vUL65c+zT/Ga/l7GY/zh1DrwU5cvHYdfQcaaw3g/8FzR+Bf
      8xOpDrpvCH/LfgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Country Rank Over Time' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      NQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='25' name='Electricity Heat' width='64'>
      iVBORw0KGgoAAAANSUhEUgAAAEAAAAAZCAYAAACB6CjhAAAACXBIWXMAABJ0AAASdAHeZh94
      AAADdElEQVRYhe2YbWhTVxjHf462rFt7HROsLwNfEDfnGIzcypotlSq0StXIlImWmREZyrRi
      q0UCS9Jm1VILbYVKLbVgxCKyFWQSpnTdlgyRhWwdrosbhrTd7MqqVrnYCumFsy8NSWNN0uuH
      +8H84Xy45zyv//s857nceUIIwQuMl/QOQG9kCNA7AL2RIUDvAPRGhgC9A9AbGQL0DkBvZAjQ
      OwC9kSHgubQj/9DbYKXUJCPLRZTsPEZ3cCJOwIdTlpETl9OX0nS/+whbipwkl1T5pakMWZaZ
      aXIYd0WCz6ISdn7ewvej6gwLWelnm+g7jPuzwwQ21HKxT2ZhTgQl9DPfjT0CXp2OY5BQoY3r
      7TtYkL5hxvu7OfXvfBZPpZAMdtA4sJfK8hbCT52W0xyoozj6GFEIXa/n4KctzPfUYJjOXHMF
      TPSd5at36mixyCzMAchBWmXiI+PSmNBwmNGVy+eQPICfbjdcsm1kSTIxNUhHrR+zq4IV6ZjN
      kVi19QC7XvuNgZHYtkYCHnDtym02lxuSltDwYIj31r41R9tGKlstKWRUgh21+M0uKpbNwbR6
      n7F7Enl5sS2NBAwR/mst0gM3DmsppmiPHXNzS4lJjfwdxutYP92HRZSUW2m4egfl2YbTghq+
      QKPfjCvd7NVJHoZ+oqPqJHf21WCOK0mNd8AEj5V+fgx8QNWJKzgWv0JWZIxAZw0Hj+fxdfsO
      CgCj/SYBe1QnghLyctpmpXLcTZdlpTbnapgLdV5KXW6Sp++hWvbEHgsKsR5to33DGzP9Ck24
      Ky7u3SLa/nj6xOvYLtr/TKbrFQ6DQ3hT+phN7oZwvW8QBsOz1h5xfkgIIYbE+T2z+ZgSXseH
      wnUjtqOxApZSaMzmwDd+9r+9Lo7RIL//uohFhwEUFEVCkhJU/xtlRMqLzok5woj9ZgB7wq7P
      KdO3MUBd8axKM/BybjZq3CTUPAVW7z6C6Qc7VZdvM6kCkTECZxr5dt0nbFoAMMBp824arg4w
      OqkCKpODvXx5qI2pfR9j0OpYKyIKod4Gmjwyxjjn2r8DpGLsl7I494WNsqa7PMnOZ802O502
      4/TbNWLryaWntRnLqVuMP4Hc19+l5FAXndviutfnRK4mNrN9TuTqWO96on38ZiU93ZYUfR+P
      hDsgO5+CNSb2d9VTFld+84TI/BZ/ofE/Y7nsKxaWqmgAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='25' name='Emissions' width='144'>
      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
      rDluii2nitwAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Emissions Over Time' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Emissions by Sector' width='192'>
      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
    </thumbnail>
    <thumbnail height='25' name='Industry' width='64'>
      iVBORw0KGgoAAAANSUhEUgAAAEAAAAAZCAYAAACB6CjhAAAACXBIWXMAABJ0AAASdAHeZh94
      AAADW0lEQVRYhe1Yb0hbVxw9zmhnjWG0sAr9MAoysBuD8W6lBiOEsrjpNofLGFMWwRYqZUiV
      CnU0UUOZbQRLwbLJJsThkNEJIyNsTNJiVhnYbB2tf1bSuozadrpJiRBj8h6cfihdXjRWg4T3
      wRy4H9659/zuuYf7B14OSWIH4zmtDWiNbABaG9Aa2QC0NqA1sgFobUBrZAPQ2oDWyAagtQGt
      kQ0g4zPE72GspwkWk4AQ5TBbT+GbmcgzJcrDKzAJASFMsDT14MpDZaOR+K23CkIIdPrV/N8Y
      ahAQQtXKzbCeuLC+FjMJ+S7dthp+4r7OhRhJxhgO+jk6Mb+xJuxlW4WVEZmkHOHcz05aK9ro
      DacoP93PD2zDdDskOsbVPSG66x1MomJhBj3ttFhcDMgJOqM7IOL7Apdf7caFRoEX8wEgH4YS
      E+qM+zfWXPPhRk07dusA6HbjwBsdaK+5Ad+1NbtGmcFA1yRqnQ04sBUz+QaUvNOMD1/4A1P3
      E3QGA1jCT9/P4q0aCbo0VLv0esjR1SRuNSpDr9+lYhTMDHRhstaJhpfSKK78h8V/DdDrE1QG
      Awhh7vYrMCwNwdFkeXKmy82wnhrCzeWNVTpjI46FXFhRACgr+OuHT+EKHUOjMRGjMvc1zk/W
      wrnV1SsreHTnFwy0fobg0XbU7lX1beOEb4JxOiQLm/o8vPUgQpkkYwu83m9jRfN3/OdZ0liQ
      kiRRkiRWnxxlMKbqk+9y0GbjcEg1U8o7QPq/hiRJlKqbecl3j+pSJJnBAOY5bHub/dPre8Yd
      7/HzP1OrAi4zWzzJN17Y00KzK0Bygs7DaxaW1OrpDpEpL0GSpMxxRwWdEwkmneOZJvbjkDEP
      zZ5JHD9YproHZnDr92IUt6RWxVaj0OXmJnG5uTpEV2MAjLD/GoB9jcbfKeA7EkB35eauni/I
      g6J6CTP6Crz80UmYrtrR+u3skzMdX0Tg0nn8WPYx3tybWlNWXYepi6cRBwDEsRgYwumLU6ir
      Ltuemfgy7oz1oNcrYJQSdAZ3AABDJewjOnx1pgNVvfOI5hWh9F07vuwwovDpGH8nRBvQF+hG
      JQCd1IqRc6M4IgSiKMCe18w4em4E77+erlUv2oQ38ZlXhH2lJhwfPIuqwgSdQ2Z/i+9oPAa5
      AGR8kta+EwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='25' name='Land Use' width='64'>
      iVBORw0KGgoAAAANSUhEUgAAAEAAAAAZCAYAAACB6CjhAAAACXBIWXMAABJ0AAASdAHeZh94
      AAACzUlEQVRYhe2YX0hTcRTHP0aK5RQhSEjBhEisfAh/Bhv90wiJYSsQJAZaK6gkC1eCjtza
      Cs0EfQlthNmEPRj4IKE9WMImJMiVetCQGsEgk1I07oOFDexBbdflbIHzIu0Lv4f7/Z3zO+d8
      77nnBzduYWFhgf8YW9ROQG3EBFA7AbURE0DtBNRGTAC1E1AbMQHUTkBtxARQOwG1ERNgwyJ9
      6eaqViCMLvwROQQYaSpCCIHNq6QnGXJZMekL0AqBEFoKSm7hejND4LeRH5dRIIRiaQsoqWhh
      YDKwIsoGCSDT96CDXdcukB2hR+Cdk8bRMir1IRsTXl58zsfs7MEjSUiSh66aXKSaS7S/Vxrq
      aZYkpOXl6eH+qUkaz7cwotBgQwSQ++y0plowH9ZE7OO8M4zBYSQrdCOzFEdtMQcyUkgAIIGd
      opyq0ni8Q2v0VkIKe4qvUJr6ltGJIB19AeQ+7K2pWMw6kiJ2CjBscGDMjDgI42PfyM1J/8ux
      03ydSkGjeA9RFkBmoLGDVIsZXeTVE/jYiSOS6udlPo2+xFlZRvfeJioObQ1z4ByzvkGcVfV8
      uFiNYUdwK4zH+kAeaKQtsYqn/1Y9nXYPJpdpDSMvNmGmF0Czj3PWh7QVZix9EsvoxSx6g49p
      +ZhuLtopi46L1i+xCXc5hpax8Ab6ZiT70RDyNXe11+n5uZpDNpXdbsrDNIb8/AZnxssYqM5j
      8RZ4QpbbzsoIAby2AjxFg9TpFpmodUC60YVkDCH9LowWqHeXs3odOuqGJOoUjNcmeHVC4g+t
      QrA9SYM8Nc0PIHENu8Rt8QQ2+hZYT/i7rFhdg/hm55bu/XlkXz8NbV6OHdeGL35extffQFOv
      QJcXpKM6AyKC14YwQ7MU2q6rI/3kWfY/esztUgu+me9APMm7D3K64hm1hSkKy5AZEJ9MWs4R
      Lrffo0gxkqI2AzYLNt0nsN74BTLL6hpyT14LAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='24' name='Top 5 CO₂ Emitters in 2022' width='64'>
      iVBORw0KGgoAAAANSUhEUgAAAEAAAAAYCAYAAABKtPtEAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAAS0lEQVRYhe3QQRHAMADDsHX8Oacw9KiFwOezbd/Dfh2gNUAHaA3QAVoDdIDWAB2gNUAH
      aA3QAVoDdIDWAB2gNUAHaA3QAVoDdIB2AVXABCzFbDFLAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Top Emitters Over Time' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Total Emissions by Country' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
